#filter-area.pt-2.mb-2
    #filter-accordion.accordion 
        .accordion-item 
            h2#accordion-header.accordion-header
                button#filter-button.accordion-button(type="button" data-bs-toggle="collapse" data-bs-target="#accordion-inner" aria-expanded="true" aria-controls="accordion-inner")
                    include filter 
                    #filter-text.ms-2.d-flex
                        span#person-count-filter-text Filters
                        span#person-filter-text.ms-1
            #accordion-inner.accordion-collapse.collapse.show(aria-labelledby="accordion-header" data-bs-parent="#filter-accordion")
                .accordion-body.d-flex.flex-column.align-items-start
                    div Show options with...
                    .input-row.mb-1
                        span ...at least #[input#person-count(type="number" min="1" max=`${event.users.length}` value="1")] respondent(s) available
                    .d-flex.flex-row
                        .d-flex 
                            .m-auto.text-nowrap ... 
                        .d-flex
                            input#user-filter-all(type="radio" value="all" name="user-filter-radio" checked)
                            label.ms-1.px-2(for="user-filter-all") all
                            input#user-filter-some(type="radio" value="any" name="user-filter-radio")
                            label.me-1.px-2(for="user-filter-some") any
                        .d-flex 
                            .m-auto.text-nowrap of the selected respondents: 
                    #person-accordion.accordion.mt-1.w-100
                        .accordion-item 
                            h2#person-header.accordion-header 
                                button#person-button.accordion-button(type="button" data-bs-toggle="collapse" data-bs-target="#person-inner" aria-expanded="true" aria-controls="person-inner") 0 selected
                            #person-inner.accordion-collapse.collapse.show(aria-labelledby="person-header" data-bs-parent="#person-accordion")
                                #user-filter-list.accordion-body.d-flex.flex-column.align-items-start 
                                    each user in event.users 
                                        .d-flex.flex-row 
                                            input.me-2(id=`person-${user.id}` type="checkbox" value=`${user.name}` name="user-filter")
                                            label(for=`person-${user.id}`)= user.name